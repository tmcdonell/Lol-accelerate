name:                 lol-accelerate
version:              0.1.0.0
synopsis:             Accelerate backend for the Λ ○ λ (Lol) lattice-cryptography library
description:
  This package provides an Accelerate backend for computing with the Λ ○ λ (Lol)
  general-purpose library for ring-based cryptography. For more information,
  see:
  .
  * Lol: <https://hackage.haskell.org/package/lol>
  .
  * Accelerate: <https://hackage.haskell.org/package/accelerate>

homepage:             https://github.com/tmcdonell/Lol-accelerate
license:              BSD3
license-file:         LICENSE
author:               Trevor L. McDonell
maintainer:           Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>
copyright:            Copyright (c) [2016]. Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>
category:             Crypto
build-type:           Simple
cabal-version:        >= 1.10

extra-source-files:
  README.md

flag llvm-cpu
  description: Enable the LLVM backend for Multicore CPUs
  default:     True

flag llvm-ptx
  description: Enable the LLVM backend for NIVDIA GPUs
  default:     True

Flag with-apps
  Description: When this flag is enabled, lol-apps tests and benchmarks are buildable.
  Default:     True

-- EAC: This flag is due to https://github.com/commercialhaskell/stack/issues/1406,
-- which prevents us from telling stack to not build executables.
Flag with-execs
  Description: When this flag and `with-apps` are both enabled, the lol-apps executables are buildable.
  Default:     False

library
  default-language:   Haskell2010
  build-depends:
      base                              >= 4.7 && < 4.10
    , accelerate                        >= 0.16
    , accelerate-io                     >= 0.16
    , accelerate-bignum                 >= 0.1
    , arithmoi                          >= 0.4.1.3
    , constraints                       >= 0.8
    , deepseq                           >= 1.4
    , fclabels                          >= 2.0
    , lol                               >= 0.7
    , MonadRandom                       >= 0.4
    , numeric-prelude                   >= 0.4.2
    , numeric-prelude-accelerate        >= 0.1
    , pretty                            >= 1.0
    , reflection                        >= 1.5.1
    , singletons                        >= 1.1.2.1
    , vector                            >= 0.10

  ghc-options:        -Wall

  exposed-modules:
      Crypto.Lol.Cyclotomic.Tensor.Accelerate

  other-modules:
      Data.Array.Accelerate.Crypto.Lol.CRTrans
      Data.Array.Accelerate.Crypto.Lol.Types.Complex
      Data.Array.Accelerate.Crypto.Lol.Types.ZqBasic

      Crypto.Lol.Cyclotomic.Tensor.Accelerate.AT
      Crypto.Lol.Cyclotomic.Tensor.Accelerate.CRT
      Crypto.Lol.Cyclotomic.Tensor.Accelerate.Common
      Crypto.Lol.Cyclotomic.Tensor.Accelerate.Dec
      Crypto.Lol.Cyclotomic.Tensor.Accelerate.Extension
      Crypto.Lol.Cyclotomic.Tensor.Accelerate.GL
      Crypto.Lol.Cyclotomic.Tensor.Accelerate.Matrix
      Crypto.Lol.Cyclotomic.Tensor.Accelerate.Pow

      Crypto.Lol.Cyclotomic.Tensor.Accelerate.Backend

  if flag(llvm-cpu)
    cpp-options:      -DACCELERATE_LLVM_NATIVE_BACKEND
    build-depends:
        accelerate-llvm-native          >= 0.16

  if flag(llvm-ptx)
    cpp-options:      -DACCELERATE_LLVM_PTX_BACKEND
    build-depends:
        accelerate-llvm-ptx             >= 0.16


Benchmark bench-lol-acc
  type:               exitcode-stdio-1.0
  default-language:   Haskell2010
  main-is:            BenchLolAccMain.hs
  ghc-options:        -main-is BenchLolAccMain
  hs-source-dirs:     benchmarks

  ghc-options:        -Wall
                      -O2
                      -threaded
                      -rtsopts
                      -with-rtsopts=-n2M
                      -with-rtsopts=-A64M
                      -funfolding-creation-threshold=15000
                      -funfolding-use-threshold=1000

  build-depends:
    base,
    DRBG,
    lol,
    lol-accelerate

test-suite test-lol-acc
  type:               exitcode-stdio-1.0
  default-language:   Haskell2010
  main-is:            TestLolAccMain.hs
  ghc-options:        -main-is TestLolAccMain
  hs-source-dirs:     tests

  ghc-options:        -Wall
                      -O2
                      -threaded
                      -rtsopts
                      -with-rtsopts=-n2M
                      -with-rtsopts=-A64M
                      -funfolding-creation-threshold=15000
                      -funfolding-use-threshold=1000

  build-depends:
    base,
    lol,
    lol-accelerate,
    test-framework < 0.9

source-repository head
  type:               git
  location:           https://github.com/tmcdonell/lol-accelerate

-- vim: nospell

Benchmark bench-lol-apps-acc
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  main-is:          BenchAppsAccMain.hs
  ghc-options:      -main-is BenchAppsAccMain
  if !flag(with-apps)
    buildable: False
  hs-source-dirs:   benchmarks

  ghc-options: -O2 -funfolding-creation-threshold=15000 -funfolding-use-threshold=1000

  build-depends:
    base >= 4.9 && < 4.10,
    DRBG < 0.6,
    lol >= 0.7.0.0 && < 0.8,
    lol-apps >= 0.2.1 && < 0.3,
    lol-accelerate,
    MonadRandom >= 0.2 && < 0.6

test-suite test-lol-apps-acc
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  main-is:          TestAppsAccMain.hs
  ghc-options:      -main-is TestAppsAccMain
  if !flag(with-apps)
    buildable: False
  hs-source-dirs:   tests
  ghc-options:      -threaded -O2

  build-depends:
    base >= 4.9 && < 4.10,
    lol >= 0.7.0.0 && < 0.8,
    lol-apps >= 0.2.1 && < 0.3,
    lol-accelerate,
    test-framework < 0.9

executable homomprf-acc
  hs-source-dirs: examples
  default-language: Haskell2010
  main-is: HomomPRFAccMain.hs
  if !flag(with-apps) || !flag(with-execs)
    buildable: False
  ghc-options: -main-is HomomPRFAccMain

  ghc-options: -threaded -rtsopts -O2

  build-depends:
    base >= 4.9 && < 4.10,
    lol-apps >= 0.2.1 && < 0.3,
    lol-accelerate

executable khprf-acc
  hs-source-dirs: examples
  default-language: Haskell2010
  main-is: KHPRFAccMain.hs
  if !flag(with-apps) || !flag(with-execs)
    buildable: False
  ghc-options: -main-is KHPRFAccMain

  ghc-options: -threaded -rtsopts -O2

  build-depends:
    base >= 4.9 && < 4.10,
    lol-apps >= 0.2.1 && < 0.3,
    lol-accelerate

executable symmshe-acc
  hs-source-dirs:   examples
  default-language: Haskell2010
  main-is:          SHEAccMain.hs
  if !flag(with-apps) || !flag(with-execs)
    buildable: False
  ghc-options: -main-is SHEAccMain

  ghc-options: -threaded -rtsopts -O2

  build-depends:
    base >= 4.9 && < 4.10,
    lol-apps >= 0.2.1 && < 0.3,
    lol-accelerate

-- vim: nospell
